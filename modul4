#include<iostream>
#include <queue>
using namespace std;
int matrix[20][20];
int visited[400] = {0};
int count = 0;
void displayMatrix(int v) {
    int i, j;
    for(i = 0; i < v; i++) {
        for(j = 0; j < v; j++) {
            cout << matrix[i][j] << " ";
        }
        cout << endl;
    }
}

void add_edge(int u, int v) {
    matrix[u][v] = 1;
}

bool  has_cycles(int size) {
    queue<int> q;
    
    q.push(0);
    visited[0] = true;
    while(!q.empty()){
        int top = q.front();
        q.pop();
        for (int i = 0; i < size; ++i){
            if(matrix[top][i] != 0) {
                if (visited[i]) {
                    return true;
                } else {
                    q.push(i);
                    visited[i] = true;
                }
            }
        }
    }
    return false;
}

int main() {
    int v = 6;
    add_edge(0, 4);
    add_edge(4, 0);
    displayMatrix(v);
    cout << has_cycles(v) << endl;
}
